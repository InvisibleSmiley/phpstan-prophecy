# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - pull_request
  - push

name: "Continuous Integration"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.1

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.0.0

      - name: "Install PHP"
        uses: shivammathur/setup-php@1.6.0
        with:
          coverage: none
          extensions: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Validate composer.json and composer.lock"
        run: composer validate --strict

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1.0.3
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-version }}-composer-locked-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php-${{ matrix.php-version }}-composer-locked-

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run localheinz/composer-normalize"
        run: composer normalize --dry-run

      - name: "Run friendsofphp/php-cs-fixer"
        run: vendor/bin/php-cs-fixer fix --diff --dry-run --verbose

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

        dependencies:
          - lowest
          - locked
          - highest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.0.0

      - name: "Install PHP"
        uses: shivammathur/setup-php@1.6.0
        with:
          coverage: none
          extensions: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1.0.3
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: composer update --no-interaction --no-progress --no-suggest --prefer-lowest

      - name: "Install locked dependencies with composer"
        if: matrix.dependencies == 'locked'
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: composer update --no-interaction --no-progress --no-suggest

      - name: "Run phpstan/phpstan"
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon

  tests:
    name: "Tests"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

        dependencies:
          - locked

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.0.0

      - name: "Install PHP"
        uses: shivammathur/setup-php@1.6.0
        with:
          coverage: none
          extensions: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1.0.3
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: composer update --no-interaction --no-progress --no-suggest --prefer-lowest

      - name: "Install locked dependencies with composer"
        if: matrix.dependencies == 'locked'
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: composer update --no-interaction --no-progress --no-suggest

      - name: "Run tests with phpunit/phpunit"
        run: vendor/bin/phpunit --configuration=phpunit.xml
